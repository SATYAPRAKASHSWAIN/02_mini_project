02- Mini PROJECT Requirement :
=================================

requirement
============

Develop Front Office Team Portal To menage student enquries

Mock Up Screens : http://13.232.229.99/

=================
Functionalities
=================

1) Home Page With caurosal
2) Sign Up
3) Unlock Account(Reset Password)
4) Login (Only unlocked account users can login)
5) Dashboard (Login in user performance report)
6) Add Enquiry
7) View Enquiry(With Dynamic Filter)
8) Edit and Update Enquiriy Statu
9) Logout

Note -1:When user logged, only that logged in user performance report
should display in dashboarch and only taht user added enquirieis should
display in View Enquiries screen.


=================
Technology Task
=================

Database :MySQL
Backend  : Spring Boot + Date Jpa + Web MVC +Thymeleaf
Fronted  : Html +CSS + JQuery + BootStrap + Ajax


Front ofc Team registration/unlock/login/forgotpwd
student enquiries : Add Enquiry /View Enquiry / Edit & Update


===============
Execution Flow
===============
1) User will ope website home page

               -> Logo Display with Nav bar
               -> Carousel (banners sliding)
               -> Course Image Display
               -> Login Button
2) User Registration

               -> Unique Email Validation
               -> Temporary pwd should be generated by app
               -> Sent Registration Email with Temp Pwd and Unlock Link
3) Unlock Account

               -> Temporary Pwd validation
               -> Set New Password
               -> Unlock Account

Note: User should unlock account only one time.If user try to 
unlock account secondtime application should be display message 
as  "Your account already unlocked" .

4) Login Functionality
            
               -> Unlocked account users can login
               -> Invalid Credentials Check(error :Invalid Credentials))
               -> Account Status Check(error : Your account locked)
               -> Login Email : Display Dashboard with Logged in User Perfomance report

5) Forgot Password :
  
               ->Invalid Email : No Found With Given Email
               ->Valid Email :Get Pwd from DB Sent User Pwd to user email

             
6)Dashboard :
            
               -> Display logged in user performance report

7) Add Enquiry :
 
               -> Add new Enquirty with status as 'New'

8) View Enquiries:

               -> Display enquiries which are added by logged in user
               -> Edit Enquiry to update Enquiry Status
               -> Filter Enquities based on given criteria
9) Logout :

               -> When user click on logout display home page


============
Db- Tables
============

1 : AIT_USER_DTLS
        
          USER_ID     INTEGER PK AUTO_INCREMENT
          NAME        VARCHAR
          EMAIL       VARCHAR
          PHNO        INTEGER
          PWD         VARCHAR
          ACC_STATUS  VARCHAR

2 : AIT_STUDENT_ENQUIRIES
 
          ENQUIRY_ID     INTEGER PK AUTO_INCREMENT
          STUDENT_NAME   VARCHAR
          PHONE          INTEGER
          CLASS_MODE     VARCHAR
          COURSE_NAME    VARCHAR
          ENQUIRY_STATUS VARCHAR
          CREATE_DATE    DATE
          UPDATED_DATE   DATE 
          USER_ID        INTEGER  FK REF:ALT_USER_DTLS               
                  
3 : AIT_COURSES

         COURSE_ID        INTEGER PK AUTO_INCREMENT
         COURSE_NAME      VARCHAR

          
4 : AIT_STATUS_TABLE

         STATUS_ID        INTEGER  PK AUTO_INCREMENT
         STATUS_NAME      VARCHAR


================
Requiered Class
================

Entity class
--------------
       UserDtlsEntity.java
       StudentEnqEntity.java
       CourseEntity.java
       EnqStatusEntity.java

Repository 
-----------
       UserDetlsRepo.java
       StudentenqRepo.java
       CourseRepo.java
       EnqStatusRepo.java

Binding class
--------------

       LoginForm.java
       SignUpForm.java
       unlockForm.java
       
       DashboardResponse.java
       EnquiryForm.java
       EnquirySearchCriteria.java

Service(utility class)
--------
      
       UserService.java
       EnquiryService.java
       

Helper Class
---------------

       PwdUtilits.java
       EmailUtilits.java

Controller
------------

       IndexController.java
       UserController.java
       EnquiryController.java

----------------------------------------
              
pages
------
       index.html
       login.html
       signup.html
       unlock.html
       forgotPwd.html
       dashboard.html
       addEnquiry.html
       viewEnquiry.html
       errorPage.html
Runner
-------
       
     dataLoader.java  (insert course names and enquiry status)
           
       
Project Structure
=================
1)Create starter project with required dependancies
2)Configure Data Source & View Resolver in Properties file
3)Create Enitty class & repository interface



===========================
Modele-1 : User management
===========================
1) Index Page
2) Sign Up with Unique Email validation
3) Unlock Account
4) Login
5) Recover Password


==================================
Module-2 Enquiry management
===============================
-> Enq Management functionality is denpends on logged in user
-> As it is user specific functionality, our application should remember
logged in user details.

-> To remember logged in use details we will use Session in our 
application.

Note: When user logged in - session should be created .When user logout
the session should be destroyed.



1)Dashboard
2)Add Enquiry
3)View Enquiries
4)Enquiry Filter
5)Logout

========================================
AJAX(Asynchronus javascript and Xml)
========================================

2 Type of requests

1)Synchronous Request( whole web page will be reloaded)
2)Asynchronus Request (DOM will be undated without reloading page)


Note: To send Asyns request to server we can use AJAX

->Ajax stands for Asynchronus Java Script and Xml


1) We ca reload only data without loading whole web page
2) We can send/read data to/from server in async mode
3) Seemless experience for end user


1)Add jquery dependancy in pom.xml
       
      <dependency>
			<groupId>org.webjars</groupId>
			<artifactId>jquery</artifactId>
			<version>3.6.4</version>
		</dependency>

2)Include jquery.min.js file in our html page

        <script src="webjars/jquery/3.6.4/jquery.min.js" ></script>


3)write ajax logic to send async request to server

  
<Script>
	$(document).ready(function() {
		$("#cname").on("change",function(e) {
			$.ajax({
				type:"GET",
				url:"cmsg",
				data:{
					cname : $("#cname").val()
				},
				success : function(data){
					$("#dropDownDiv").html(data);
				}
			});
		});
		
		
		
		$("#submitBtn").click(function(e) {

			$.ajax({
				type : "GET",
				url : "msg",
				data : {
					name : $("#username").val()

				},
				success : function(result) {
					alert(result);
					$("#msgDiv").html(result);
				},
				error : function(result) {
					alert('error');
				}
			});
		});
	});
</Script>


4)Update response in web page
5)


















